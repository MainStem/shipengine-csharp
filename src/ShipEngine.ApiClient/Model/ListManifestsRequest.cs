/* 
 * ShipEngine
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ShipEngine.ApiClient.Client.SwaggerDateConverter;

namespace ShipEngine.ApiClient.Model
{
    /// <summary>
    /// ListManifestsRequest
    /// </summary>
    [DataContract]
    public partial class ListManifestsRequest :  IEquatable<ListManifestsRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ListManifestsRequest" /> class.
        /// </summary>
        /// <param name="warehouseId">warehouseId.</param>
        /// <param name="shipDateStart">shipDateStart.</param>
        /// <param name="shipDateEnd">shipDateEnd.</param>
        /// <param name="createdAtStart">createdAtStart.</param>
        /// <param name="createdAtEnd">createdAtEnd.</param>
        /// <param name="carrierId">carrierId.</param>
        /// <param name="page">page.</param>
        /// <param name="pageSize">pageSize.</param>
        public ListManifestsRequest(string warehouseId = default(string), DateTime? shipDateStart = default(DateTime?), DateTime? shipDateEnd = default(DateTime?), DateTime? createdAtStart = default(DateTime?), DateTime? createdAtEnd = default(DateTime?), string carrierId = default(string), int? page = default(int?), int? pageSize = default(int?))
        {
            this.WarehouseId = warehouseId;
            this.ShipDateStart = shipDateStart;
            this.ShipDateEnd = shipDateEnd;
            this.CreatedAtStart = createdAtStart;
            this.CreatedAtEnd = createdAtEnd;
            this.CarrierId = carrierId;
            this.Page = page;
            this.PageSize = pageSize;
        }
        
        /// <summary>
        /// Gets or Sets WarehouseId
        /// </summary>
        [DataMember(Name="warehouse_id", EmitDefaultValue=false)]
        public string WarehouseId { get; set; }

        /// <summary>
        /// Gets or Sets ShipDateStart
        /// </summary>
        [DataMember(Name="ship_date_start", EmitDefaultValue=false)]
        public DateTime? ShipDateStart { get; set; }

        /// <summary>
        /// Gets or Sets ShipDateEnd
        /// </summary>
        [DataMember(Name="ship_date_end", EmitDefaultValue=false)]
        public DateTime? ShipDateEnd { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAtStart
        /// </summary>
        [DataMember(Name="created_at_start", EmitDefaultValue=false)]
        public DateTime? CreatedAtStart { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAtEnd
        /// </summary>
        [DataMember(Name="created_at_end", EmitDefaultValue=false)]
        public DateTime? CreatedAtEnd { get; set; }

        /// <summary>
        /// Gets or Sets CarrierId
        /// </summary>
        [DataMember(Name="carrier_id", EmitDefaultValue=false)]
        public string CarrierId { get; set; }

        /// <summary>
        /// Gets or Sets Page
        /// </summary>
        [DataMember(Name="page", EmitDefaultValue=false)]
        public int? Page { get; set; }

        /// <summary>
        /// Gets or Sets PageSize
        /// </summary>
        [DataMember(Name="page_size", EmitDefaultValue=false)]
        public int? PageSize { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ListManifestsRequest {\n");
            sb.Append("  WarehouseId: ").Append(WarehouseId).Append("\n");
            sb.Append("  ShipDateStart: ").Append(ShipDateStart).Append("\n");
            sb.Append("  ShipDateEnd: ").Append(ShipDateEnd).Append("\n");
            sb.Append("  CreatedAtStart: ").Append(CreatedAtStart).Append("\n");
            sb.Append("  CreatedAtEnd: ").Append(CreatedAtEnd).Append("\n");
            sb.Append("  CarrierId: ").Append(CarrierId).Append("\n");
            sb.Append("  Page: ").Append(Page).Append("\n");
            sb.Append("  PageSize: ").Append(PageSize).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ListManifestsRequest);
        }

        /// <summary>
        /// Returns true if ListManifestsRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of ListManifestsRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ListManifestsRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.WarehouseId == input.WarehouseId ||
                    (this.WarehouseId != null &&
                    this.WarehouseId.Equals(input.WarehouseId))
                ) && 
                (
                    this.ShipDateStart == input.ShipDateStart ||
                    (this.ShipDateStart != null &&
                    this.ShipDateStart.Equals(input.ShipDateStart))
                ) && 
                (
                    this.ShipDateEnd == input.ShipDateEnd ||
                    (this.ShipDateEnd != null &&
                    this.ShipDateEnd.Equals(input.ShipDateEnd))
                ) && 
                (
                    this.CreatedAtStart == input.CreatedAtStart ||
                    (this.CreatedAtStart != null &&
                    this.CreatedAtStart.Equals(input.CreatedAtStart))
                ) && 
                (
                    this.CreatedAtEnd == input.CreatedAtEnd ||
                    (this.CreatedAtEnd != null &&
                    this.CreatedAtEnd.Equals(input.CreatedAtEnd))
                ) && 
                (
                    this.CarrierId == input.CarrierId ||
                    (this.CarrierId != null &&
                    this.CarrierId.Equals(input.CarrierId))
                ) && 
                (
                    this.Page == input.Page ||
                    (this.Page != null &&
                    this.Page.Equals(input.Page))
                ) && 
                (
                    this.PageSize == input.PageSize ||
                    (this.PageSize != null &&
                    this.PageSize.Equals(input.PageSize))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.WarehouseId != null)
                    hashCode = hashCode * 59 + this.WarehouseId.GetHashCode();
                if (this.ShipDateStart != null)
                    hashCode = hashCode * 59 + this.ShipDateStart.GetHashCode();
                if (this.ShipDateEnd != null)
                    hashCode = hashCode * 59 + this.ShipDateEnd.GetHashCode();
                if (this.CreatedAtStart != null)
                    hashCode = hashCode * 59 + this.CreatedAtStart.GetHashCode();
                if (this.CreatedAtEnd != null)
                    hashCode = hashCode * 59 + this.CreatedAtEnd.GetHashCode();
                if (this.CarrierId != null)
                    hashCode = hashCode * 59 + this.CarrierId.GetHashCode();
                if (this.Page != null)
                    hashCode = hashCode * 59 + this.Page.GetHashCode();
                if (this.PageSize != null)
                    hashCode = hashCode * 59 + this.PageSize.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

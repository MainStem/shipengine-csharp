/* 
 * ShipEngine
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace ShipEngine.ApiClient.Model
{
    /// <summary>
    ///     TrackingInformation
    /// </summary>
    [DataContract]
    public class TrackingInformation : IEquatable<TrackingInformation>, IValidatableObject
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="TrackingInformation" /> class.
        /// </summary>
        /// <param name="trackingNumber">TrackingNumber.</param>
        /// <param name="statusCode">StatusCode.</param>
        /// <param name="statusDescription">StatusDescription.</param>
        /// <param name="carrierStatusCode">CarrierStatusCode.</param>
        /// <param name="carrierStatusDescription">CarrierStatusDescription.</param>
        /// <param name="shipDate">ShipDate.</param>
        /// <param name="estimatedDeliveryDate">EstimatedDeliveryDate.</param>
        /// <param name="actualDeliveryDate">ActualDeliveryDate.</param>
        /// <param name="exceptionDescription">ExceptionDescription.</param>
        /// <param name="events">Events.</param>
        public TrackingInformation(string trackingNumber = default(string), string statusCode = default(string),
            string statusDescription = default(string), string carrierStatusCode = default(string),
            string carrierStatusDescription = default(string), DateTime? shipDate = default(DateTime?),
            DateTime? estimatedDeliveryDate = default(DateTime?), DateTime? actualDeliveryDate = default(DateTime?),
            string exceptionDescription = default(string), List<TrackEvent> events = default(List<TrackEvent>))
        {
            TrackingNumber = trackingNumber;
            StatusCode = statusCode;
            StatusDescription = statusDescription;
            CarrierStatusCode = carrierStatusCode;
            CarrierStatusDescription = carrierStatusDescription;
            ShipDate = shipDate;
            EstimatedDeliveryDate = estimatedDeliveryDate;
            ActualDeliveryDate = actualDeliveryDate;
            ExceptionDescription = exceptionDescription;
            Events = events;
        }

        /// <summary>
        ///     Gets or Sets TrackingNumber
        /// </summary>
        [DataMember(Name = "tracking_number", EmitDefaultValue = false)]
        public string TrackingNumber { get; set; }

        /// <summary>
        ///     Gets or Sets StatusCode
        /// </summary>
        [DataMember(Name = "status_code", EmitDefaultValue = false)]
        public string StatusCode { get; set; }

        /// <summary>
        ///     Gets or Sets StatusDescription
        /// </summary>
        [DataMember(Name = "status_description", EmitDefaultValue = false)]
        public string StatusDescription { get; set; }

        /// <summary>
        ///     Gets or Sets CarrierStatusCode
        /// </summary>
        [DataMember(Name = "carrier_status_code", EmitDefaultValue = false)]
        public string CarrierStatusCode { get; set; }

        /// <summary>
        ///     Gets or Sets CarrierStatusDescription
        /// </summary>
        [DataMember(Name = "carrier_status_description", EmitDefaultValue = false)]
        public string CarrierStatusDescription { get; set; }

        /// <summary>
        ///     Gets or Sets ShipDate
        /// </summary>
        [DataMember(Name = "ship_date", EmitDefaultValue = false)]
        public DateTime? ShipDate { get; set; }

        /// <summary>
        ///     Gets or Sets EstimatedDeliveryDate
        /// </summary>
        [DataMember(Name = "estimated_delivery_date", EmitDefaultValue = false)]
        public DateTime? EstimatedDeliveryDate { get; set; }

        /// <summary>
        ///     Gets or Sets ActualDeliveryDate
        /// </summary>
        [DataMember(Name = "actual_delivery_date", EmitDefaultValue = false)]
        public DateTime? ActualDeliveryDate { get; set; }

        /// <summary>
        ///     Gets or Sets ExceptionDescription
        /// </summary>
        [DataMember(Name = "exception_description", EmitDefaultValue = false)]
        public string ExceptionDescription { get; set; }

        /// <summary>
        ///     Gets or Sets Events
        /// </summary>
        [DataMember(Name = "events", EmitDefaultValue = false)]
        public List<TrackEvent> Events { get; set; }

        /// <summary>
        ///     Returns true if TrackingInformation instances are equal
        /// </summary>
        /// <param name="other">Instance of TrackingInformation to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TrackingInformation other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
            {
                return false;
            }

            return
                (
                    TrackingNumber == other.TrackingNumber ||
                    TrackingNumber != null &&
                    TrackingNumber.Equals(other.TrackingNumber)
                ) &&
                (
                    StatusCode == other.StatusCode ||
                    StatusCode != null &&
                    StatusCode.Equals(other.StatusCode)
                ) &&
                (
                    StatusDescription == other.StatusDescription ||
                    StatusDescription != null &&
                    StatusDescription.Equals(other.StatusDescription)
                ) &&
                (
                    CarrierStatusCode == other.CarrierStatusCode ||
                    CarrierStatusCode != null &&
                    CarrierStatusCode.Equals(other.CarrierStatusCode)
                ) &&
                (
                    CarrierStatusDescription == other.CarrierStatusDescription ||
                    CarrierStatusDescription != null &&
                    CarrierStatusDescription.Equals(other.CarrierStatusDescription)
                ) &&
                (
                    ShipDate == other.ShipDate ||
                    ShipDate != null &&
                    ShipDate.Equals(other.ShipDate)
                ) &&
                (
                    EstimatedDeliveryDate == other.EstimatedDeliveryDate ||
                    EstimatedDeliveryDate != null &&
                    EstimatedDeliveryDate.Equals(other.EstimatedDeliveryDate)
                ) &&
                (
                    ActualDeliveryDate == other.ActualDeliveryDate ||
                    ActualDeliveryDate != null &&
                    ActualDeliveryDate.Equals(other.ActualDeliveryDate)
                ) &&
                (
                    ExceptionDescription == other.ExceptionDescription ||
                    ExceptionDescription != null &&
                    ExceptionDescription.Equals(other.ExceptionDescription)
                ) &&
                (
                    Events == other.Events ||
                    Events != null &&
                    Events.SequenceEqual(other.Events)
                );
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TrackingInformation {\n");
            sb.Append("  TrackingNumber: ").Append(TrackingNumber).Append("\n");
            sb.Append("  StatusCode: ").Append(StatusCode).Append("\n");
            sb.Append("  StatusDescription: ").Append(StatusDescription).Append("\n");
            sb.Append("  CarrierStatusCode: ").Append(CarrierStatusCode).Append("\n");
            sb.Append("  CarrierStatusDescription: ").Append(CarrierStatusDescription).Append("\n");
            sb.Append("  ShipDate: ").Append(ShipDate).Append("\n");
            sb.Append("  EstimatedDeliveryDate: ").Append(EstimatedDeliveryDate).Append("\n");
            sb.Append("  ActualDeliveryDate: ").Append(ActualDeliveryDate).Append("\n");
            sb.Append("  ExceptionDescription: ").Append(ExceptionDescription).Append("\n");
            sb.Append("  Events: ").Append(Events).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return Equals(obj as TrackingInformation);
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                var hash = 41;
                // Suitable nullity checks etc, of course :)
                if (TrackingNumber != null)
                {
                    hash = hash * 59 + TrackingNumber.GetHashCode();
                }
                if (StatusCode != null)
                {
                    hash = hash * 59 + StatusCode.GetHashCode();
                }
                if (StatusDescription != null)
                {
                    hash = hash * 59 + StatusDescription.GetHashCode();
                }
                if (CarrierStatusCode != null)
                {
                    hash = hash * 59 + CarrierStatusCode.GetHashCode();
                }
                if (CarrierStatusDescription != null)
                {
                    hash = hash * 59 + CarrierStatusDescription.GetHashCode();
                }
                if (ShipDate != null)
                {
                    hash = hash * 59 + ShipDate.GetHashCode();
                }
                if (EstimatedDeliveryDate != null)
                {
                    hash = hash * 59 + EstimatedDeliveryDate.GetHashCode();
                }
                if (ActualDeliveryDate != null)
                {
                    hash = hash * 59 + ActualDeliveryDate.GetHashCode();
                }
                if (ExceptionDescription != null)
                {
                    hash = hash * 59 + ExceptionDescription.GetHashCode();
                }
                if (Events != null)
                {
                    hash = hash * 59 + Events.GetHashCode();
                }
                return hash;
            }
        }
    }
}
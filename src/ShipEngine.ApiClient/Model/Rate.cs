/* 
 * ShipEngine
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ShipEngine.ApiClient.Client.SwaggerDateConverter;

namespace ShipEngine.ApiClient.Model
{
    /// <summary>
    /// Rate
    /// </summary>
    [DataContract]
    public partial class Rate :  IEquatable<Rate>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets RateType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RateTypeEnum
        {
            
            /// <summary>
            /// Enum Check for "check"
            /// </summary>
            [EnumMember(Value = "check")]
            Check,
            
            /// <summary>
            /// Enum Shipment for "shipment"
            /// </summary>
            [EnumMember(Value = "shipment")]
            Shipment
        }

        /// <summary>
        /// Gets or Sets ValidationStatus
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ValidationStatusEnum
        {
            
            /// <summary>
            /// Enum Valid for "valid"
            /// </summary>
            [EnumMember(Value = "valid")]
            Valid,
            
            /// <summary>
            /// Enum Invalid for "invalid"
            /// </summary>
            [EnumMember(Value = "invalid")]
            Invalid,
            
            /// <summary>
            /// Enum Haswarnings for "has_warnings"
            /// </summary>
            [EnumMember(Value = "has_warnings")]
            Haswarnings,
            
            /// <summary>
            /// Enum Unknown for "unknown"
            /// </summary>
            [EnumMember(Value = "unknown")]
            Unknown
        }

        /// <summary>
        /// Gets or Sets RateType
        /// </summary>
        [DataMember(Name="rate_type", EmitDefaultValue=false)]
        public RateTypeEnum? RateType { get; set; }
        /// <summary>
        /// Gets or Sets ValidationStatus
        /// </summary>
        [DataMember(Name="validation_status", EmitDefaultValue=false)]
        public ValidationStatusEnum? ValidationStatus { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Rate" /> class.
        /// </summary>
        /// <param name="RateId">RateId.</param>
        /// <param name="RateType">RateType.</param>
        /// <param name="CarrierId">CarrierId.</param>
        /// <param name="ShippingAmount">ShippingAmount.</param>
        /// <param name="InsuranceAmount">InsuranceAmount.</param>
        /// <param name="ConfirmationAmount">ConfirmationAmount.</param>
        /// <param name="OtherAmount">OtherAmount.</param>
        /// <param name="Zone">Zone.</param>
        /// <param name="PackageType">PackageType.</param>
        /// <param name="DeliveryDays">DeliveryDays.</param>
        /// <param name="GuaranteedService">GuaranteedService.</param>
        /// <param name="EstimatedDeliveryDate">EstimatedDeliveryDate.</param>
        /// <param name="CarrierDeliveryDays">CarrierDeliveryDays.</param>
        /// <param name="ShipDate">ShipDate.</param>
        /// <param name="NegotiatedRate">NegotiatedRate.</param>
        /// <param name="ServiceType">ServiceType.</param>
        /// <param name="ServiceCode">ServiceCode.</param>
        /// <param name="Trackable">Trackable.</param>
        /// <param name="ValidationStatus">ValidationStatus.</param>
        /// <param name="WarningMessages">WarningMessages.</param>
        /// <param name="ErrorMessages">ErrorMessages.</param>
        /// <param name="CarrierCode">CarrierCode.</param>
        /// <param name="CarrierNickname">CarrierNickname.</param>
        /// <param name="CarrierFriendlyName">CarrierFriendlyName.</param>
        public Rate(string RateId = default(string), RateTypeEnum? RateType = default(RateTypeEnum?), string CarrierId = default(string), MoneyDTO ShippingAmount = default(MoneyDTO), MoneyDTO InsuranceAmount = default(MoneyDTO), MoneyDTO ConfirmationAmount = default(MoneyDTO), MoneyDTO OtherAmount = default(MoneyDTO), int? Zone = default(int?), string PackageType = default(string), int? DeliveryDays = default(int?), bool? GuaranteedService = default(bool?), DateTime? EstimatedDeliveryDate = default(DateTime?), string CarrierDeliveryDays = default(string), DateTime? ShipDate = default(DateTime?), bool? NegotiatedRate = default(bool?), string ServiceType = default(string), string ServiceCode = default(string), bool? Trackable = default(bool?), ValidationStatusEnum? ValidationStatus = default(ValidationStatusEnum?), List<string> WarningMessages = default(List<string>), List<string> ErrorMessages = default(List<string>), string CarrierCode = default(string), string CarrierNickname = default(string), string CarrierFriendlyName = default(string))
        {
            this.RateId = RateId;
            this.RateType = RateType;
            this.CarrierId = CarrierId;
            this.ShippingAmount = ShippingAmount;
            this.InsuranceAmount = InsuranceAmount;
            this.ConfirmationAmount = ConfirmationAmount;
            this.OtherAmount = OtherAmount;
            this.Zone = Zone;
            this.PackageType = PackageType;
            this.DeliveryDays = DeliveryDays;
            this.GuaranteedService = GuaranteedService;
            this.EstimatedDeliveryDate = EstimatedDeliveryDate;
            this.CarrierDeliveryDays = CarrierDeliveryDays;
            this.ShipDate = ShipDate;
            this.NegotiatedRate = NegotiatedRate;
            this.ServiceType = ServiceType;
            this.ServiceCode = ServiceCode;
            this.Trackable = Trackable;
            this.ValidationStatus = ValidationStatus;
            this.WarningMessages = WarningMessages;
            this.ErrorMessages = ErrorMessages;
            this.CarrierCode = CarrierCode;
            this.CarrierNickname = CarrierNickname;
            this.CarrierFriendlyName = CarrierFriendlyName;
        }
        
        /// <summary>
        /// Gets or Sets RateId
        /// </summary>
        [DataMember(Name="rate_id", EmitDefaultValue=false)]
        public string RateId { get; set; }


        /// <summary>
        /// Gets or Sets CarrierId
        /// </summary>
        [DataMember(Name="carrier_id", EmitDefaultValue=false)]
        public string CarrierId { get; set; }

        /// <summary>
        /// Gets or Sets ShippingAmount
        /// </summary>
        [DataMember(Name="shipping_amount", EmitDefaultValue=false)]
        public MoneyDTO ShippingAmount { get; set; }

        /// <summary>
        /// Gets or Sets InsuranceAmount
        /// </summary>
        [DataMember(Name="insurance_amount", EmitDefaultValue=false)]
        public MoneyDTO InsuranceAmount { get; set; }

        /// <summary>
        /// Gets or Sets ConfirmationAmount
        /// </summary>
        [DataMember(Name="confirmation_amount", EmitDefaultValue=false)]
        public MoneyDTO ConfirmationAmount { get; set; }

        /// <summary>
        /// Gets or Sets OtherAmount
        /// </summary>
        [DataMember(Name="other_amount", EmitDefaultValue=false)]
        public MoneyDTO OtherAmount { get; set; }

        /// <summary>
        /// Gets or Sets Zone
        /// </summary>
        [DataMember(Name="zone", EmitDefaultValue=false)]
        public int? Zone { get; set; }

        /// <summary>
        /// Gets or Sets PackageType
        /// </summary>
        [DataMember(Name="package_type", EmitDefaultValue=false)]
        public string PackageType { get; set; }

        /// <summary>
        /// Gets or Sets DeliveryDays
        /// </summary>
        [DataMember(Name="delivery_days", EmitDefaultValue=false)]
        public int? DeliveryDays { get; set; }

        /// <summary>
        /// Gets or Sets GuaranteedService
        /// </summary>
        [DataMember(Name="guaranteed_service", EmitDefaultValue=false)]
        public bool? GuaranteedService { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedDeliveryDate
        /// </summary>
        [DataMember(Name="estimated_delivery_date", EmitDefaultValue=false)]
        public DateTime? EstimatedDeliveryDate { get; set; }

        /// <summary>
        /// Gets or Sets CarrierDeliveryDays
        /// </summary>
        [DataMember(Name="carrier_delivery_days", EmitDefaultValue=false)]
        public string CarrierDeliveryDays { get; set; }

        /// <summary>
        /// Gets or Sets ShipDate
        /// </summary>
        [DataMember(Name="ship_date", EmitDefaultValue=false)]
        public DateTime? ShipDate { get; set; }

        /// <summary>
        /// Gets or Sets NegotiatedRate
        /// </summary>
        [DataMember(Name="negotiated_rate", EmitDefaultValue=false)]
        public bool? NegotiatedRate { get; set; }

        /// <summary>
        /// Gets or Sets ServiceType
        /// </summary>
        [DataMember(Name="service_type", EmitDefaultValue=false)]
        public string ServiceType { get; set; }

        /// <summary>
        /// Gets or Sets ServiceCode
        /// </summary>
        [DataMember(Name="service_code", EmitDefaultValue=false)]
        public string ServiceCode { get; set; }

        /// <summary>
        /// Gets or Sets Trackable
        /// </summary>
        [DataMember(Name="trackable", EmitDefaultValue=false)]
        public bool? Trackable { get; set; }


        /// <summary>
        /// Gets or Sets WarningMessages
        /// </summary>
        [DataMember(Name="warning_messages", EmitDefaultValue=false)]
        public List<string> WarningMessages { get; set; }

        /// <summary>
        /// Gets or Sets ErrorMessages
        /// </summary>
        [DataMember(Name="error_messages", EmitDefaultValue=false)]
        public List<string> ErrorMessages { get; set; }

        /// <summary>
        /// Gets or Sets CarrierCode
        /// </summary>
        [DataMember(Name="carrier_code", EmitDefaultValue=false)]
        public string CarrierCode { get; set; }

        /// <summary>
        /// Gets or Sets CarrierNickname
        /// </summary>
        [DataMember(Name="carrier_nickname", EmitDefaultValue=false)]
        public string CarrierNickname { get; set; }

        /// <summary>
        /// Gets or Sets CarrierFriendlyName
        /// </summary>
        [DataMember(Name="carrier_friendly_name", EmitDefaultValue=false)]
        public string CarrierFriendlyName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Rate {\n");
            sb.Append("  RateId: ").Append(RateId).Append("\n");
            sb.Append("  RateType: ").Append(RateType).Append("\n");
            sb.Append("  CarrierId: ").Append(CarrierId).Append("\n");
            sb.Append("  ShippingAmount: ").Append(ShippingAmount).Append("\n");
            sb.Append("  InsuranceAmount: ").Append(InsuranceAmount).Append("\n");
            sb.Append("  ConfirmationAmount: ").Append(ConfirmationAmount).Append("\n");
            sb.Append("  OtherAmount: ").Append(OtherAmount).Append("\n");
            sb.Append("  Zone: ").Append(Zone).Append("\n");
            sb.Append("  PackageType: ").Append(PackageType).Append("\n");
            sb.Append("  DeliveryDays: ").Append(DeliveryDays).Append("\n");
            sb.Append("  GuaranteedService: ").Append(GuaranteedService).Append("\n");
            sb.Append("  EstimatedDeliveryDate: ").Append(EstimatedDeliveryDate).Append("\n");
            sb.Append("  CarrierDeliveryDays: ").Append(CarrierDeliveryDays).Append("\n");
            sb.Append("  ShipDate: ").Append(ShipDate).Append("\n");
            sb.Append("  NegotiatedRate: ").Append(NegotiatedRate).Append("\n");
            sb.Append("  ServiceType: ").Append(ServiceType).Append("\n");
            sb.Append("  ServiceCode: ").Append(ServiceCode).Append("\n");
            sb.Append("  Trackable: ").Append(Trackable).Append("\n");
            sb.Append("  ValidationStatus: ").Append(ValidationStatus).Append("\n");
            sb.Append("  WarningMessages: ").Append(WarningMessages).Append("\n");
            sb.Append("  ErrorMessages: ").Append(ErrorMessages).Append("\n");
            sb.Append("  CarrierCode: ").Append(CarrierCode).Append("\n");
            sb.Append("  CarrierNickname: ").Append(CarrierNickname).Append("\n");
            sb.Append("  CarrierFriendlyName: ").Append(CarrierFriendlyName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Rate);
        }

        /// <summary>
        /// Returns true if Rate instances are equal
        /// </summary>
        /// <param name="input">Instance of Rate to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Rate input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.RateId == input.RateId ||
                    (this.RateId != null &&
                    this.RateId.Equals(input.RateId))
                ) && 
                (
                    this.RateType == input.RateType ||
                    (this.RateType != null &&
                    this.RateType.Equals(input.RateType))
                ) && 
                (
                    this.CarrierId == input.CarrierId ||
                    (this.CarrierId != null &&
                    this.CarrierId.Equals(input.CarrierId))
                ) && 
                (
                    this.ShippingAmount == input.ShippingAmount ||
                    (this.ShippingAmount != null &&
                    this.ShippingAmount.Equals(input.ShippingAmount))
                ) && 
                (
                    this.InsuranceAmount == input.InsuranceAmount ||
                    (this.InsuranceAmount != null &&
                    this.InsuranceAmount.Equals(input.InsuranceAmount))
                ) && 
                (
                    this.ConfirmationAmount == input.ConfirmationAmount ||
                    (this.ConfirmationAmount != null &&
                    this.ConfirmationAmount.Equals(input.ConfirmationAmount))
                ) && 
                (
                    this.OtherAmount == input.OtherAmount ||
                    (this.OtherAmount != null &&
                    this.OtherAmount.Equals(input.OtherAmount))
                ) && 
                (
                    this.Zone == input.Zone ||
                    (this.Zone != null &&
                    this.Zone.Equals(input.Zone))
                ) && 
                (
                    this.PackageType == input.PackageType ||
                    (this.PackageType != null &&
                    this.PackageType.Equals(input.PackageType))
                ) && 
                (
                    this.DeliveryDays == input.DeliveryDays ||
                    (this.DeliveryDays != null &&
                    this.DeliveryDays.Equals(input.DeliveryDays))
                ) && 
                (
                    this.GuaranteedService == input.GuaranteedService ||
                    (this.GuaranteedService != null &&
                    this.GuaranteedService.Equals(input.GuaranteedService))
                ) && 
                (
                    this.EstimatedDeliveryDate == input.EstimatedDeliveryDate ||
                    (this.EstimatedDeliveryDate != null &&
                    this.EstimatedDeliveryDate.Equals(input.EstimatedDeliveryDate))
                ) && 
                (
                    this.CarrierDeliveryDays == input.CarrierDeliveryDays ||
                    (this.CarrierDeliveryDays != null &&
                    this.CarrierDeliveryDays.Equals(input.CarrierDeliveryDays))
                ) && 
                (
                    this.ShipDate == input.ShipDate ||
                    (this.ShipDate != null &&
                    this.ShipDate.Equals(input.ShipDate))
                ) && 
                (
                    this.NegotiatedRate == input.NegotiatedRate ||
                    (this.NegotiatedRate != null &&
                    this.NegotiatedRate.Equals(input.NegotiatedRate))
                ) && 
                (
                    this.ServiceType == input.ServiceType ||
                    (this.ServiceType != null &&
                    this.ServiceType.Equals(input.ServiceType))
                ) && 
                (
                    this.ServiceCode == input.ServiceCode ||
                    (this.ServiceCode != null &&
                    this.ServiceCode.Equals(input.ServiceCode))
                ) && 
                (
                    this.Trackable == input.Trackable ||
                    (this.Trackable != null &&
                    this.Trackable.Equals(input.Trackable))
                ) && 
                (
                    this.ValidationStatus == input.ValidationStatus ||
                    (this.ValidationStatus != null &&
                    this.ValidationStatus.Equals(input.ValidationStatus))
                ) && 
                (
                    this.WarningMessages == input.WarningMessages ||
                    (this.WarningMessages != null &&
                    this.WarningMessages.SequenceEqual(input.WarningMessages))
                ) && 
                (
                    this.ErrorMessages == input.ErrorMessages ||
                    (this.ErrorMessages != null &&
                    this.ErrorMessages.SequenceEqual(input.ErrorMessages))
                ) && 
                (
                    this.CarrierCode == input.CarrierCode ||
                    (this.CarrierCode != null &&
                    this.CarrierCode.Equals(input.CarrierCode))
                ) && 
                (
                    this.CarrierNickname == input.CarrierNickname ||
                    (this.CarrierNickname != null &&
                    this.CarrierNickname.Equals(input.CarrierNickname))
                ) && 
                (
                    this.CarrierFriendlyName == input.CarrierFriendlyName ||
                    (this.CarrierFriendlyName != null &&
                    this.CarrierFriendlyName.Equals(input.CarrierFriendlyName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RateId != null)
                    hashCode = hashCode * 59 + this.RateId.GetHashCode();
                if (this.RateType != null)
                    hashCode = hashCode * 59 + this.RateType.GetHashCode();
                if (this.CarrierId != null)
                    hashCode = hashCode * 59 + this.CarrierId.GetHashCode();
                if (this.ShippingAmount != null)
                    hashCode = hashCode * 59 + this.ShippingAmount.GetHashCode();
                if (this.InsuranceAmount != null)
                    hashCode = hashCode * 59 + this.InsuranceAmount.GetHashCode();
                if (this.ConfirmationAmount != null)
                    hashCode = hashCode * 59 + this.ConfirmationAmount.GetHashCode();
                if (this.OtherAmount != null)
                    hashCode = hashCode * 59 + this.OtherAmount.GetHashCode();
                if (this.Zone != null)
                    hashCode = hashCode * 59 + this.Zone.GetHashCode();
                if (this.PackageType != null)
                    hashCode = hashCode * 59 + this.PackageType.GetHashCode();
                if (this.DeliveryDays != null)
                    hashCode = hashCode * 59 + this.DeliveryDays.GetHashCode();
                if (this.GuaranteedService != null)
                    hashCode = hashCode * 59 + this.GuaranteedService.GetHashCode();
                if (this.EstimatedDeliveryDate != null)
                    hashCode = hashCode * 59 + this.EstimatedDeliveryDate.GetHashCode();
                if (this.CarrierDeliveryDays != null)
                    hashCode = hashCode * 59 + this.CarrierDeliveryDays.GetHashCode();
                if (this.ShipDate != null)
                    hashCode = hashCode * 59 + this.ShipDate.GetHashCode();
                if (this.NegotiatedRate != null)
                    hashCode = hashCode * 59 + this.NegotiatedRate.GetHashCode();
                if (this.ServiceType != null)
                    hashCode = hashCode * 59 + this.ServiceType.GetHashCode();
                if (this.ServiceCode != null)
                    hashCode = hashCode * 59 + this.ServiceCode.GetHashCode();
                if (this.Trackable != null)
                    hashCode = hashCode * 59 + this.Trackable.GetHashCode();
                if (this.ValidationStatus != null)
                    hashCode = hashCode * 59 + this.ValidationStatus.GetHashCode();
                if (this.WarningMessages != null)
                    hashCode = hashCode * 59 + this.WarningMessages.GetHashCode();
                if (this.ErrorMessages != null)
                    hashCode = hashCode * 59 + this.ErrorMessages.GetHashCode();
                if (this.CarrierCode != null)
                    hashCode = hashCode * 59 + this.CarrierCode.GetHashCode();
                if (this.CarrierNickname != null)
                    hashCode = hashCode * 59 + this.CarrierNickname.GetHashCode();
                if (this.CarrierFriendlyName != null)
                    hashCode = hashCode * 59 + this.CarrierFriendlyName.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

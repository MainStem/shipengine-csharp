/* 
 * ShipEngine
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ShipEngine.ApiClient.Client.SwaggerDateConverter;

namespace ShipEngine.ApiClient.Model
{
    /// <summary>
    /// CreateManifestRequest
    /// </summary>
    [DataContract]
    public partial class CreateManifestRequest :  IEquatable<CreateManifestRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateManifestRequest" /> class.
        /// </summary>
        /// <param name="CarrierId">CarrierId.</param>
        /// <param name="ExcludedLabelIds">ExcludedLabelIds.</param>
        /// <param name="WarehouseId">WarehouseId.</param>
        /// <param name="ShipDate">ShipDate.</param>
        public CreateManifestRequest(string CarrierId = default(string), List<string> ExcludedLabelIds = default(List<string>), string WarehouseId = default(string), DateTime? ShipDate = default(DateTime?))
        {
            this.CarrierId = CarrierId;
            this.ExcludedLabelIds = ExcludedLabelIds;
            this.WarehouseId = WarehouseId;
            this.ShipDate = ShipDate;
        }
        
        /// <summary>
        /// Gets or Sets CarrierId
        /// </summary>
        [DataMember(Name="carrier_id", EmitDefaultValue=false)]
        public string CarrierId { get; set; }

        /// <summary>
        /// Gets or Sets ExcludedLabelIds
        /// </summary>
        [DataMember(Name="excluded_label_ids", EmitDefaultValue=false)]
        public List<string> ExcludedLabelIds { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseId
        /// </summary>
        [DataMember(Name="warehouse_id", EmitDefaultValue=false)]
        public string WarehouseId { get; set; }

        /// <summary>
        /// Gets or Sets ShipDate
        /// </summary>
        [DataMember(Name="ship_date", EmitDefaultValue=false)]
        public DateTime? ShipDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreateManifestRequest {\n");
            sb.Append("  CarrierId: ").Append(CarrierId).Append("\n");
            sb.Append("  ExcludedLabelIds: ").Append(ExcludedLabelIds).Append("\n");
            sb.Append("  WarehouseId: ").Append(WarehouseId).Append("\n");
            sb.Append("  ShipDate: ").Append(ShipDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CreateManifestRequest);
        }

        /// <summary>
        /// Returns true if CreateManifestRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of CreateManifestRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateManifestRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CarrierId == input.CarrierId ||
                    (this.CarrierId != null &&
                    this.CarrierId.Equals(input.CarrierId))
                ) && 
                (
                    this.ExcludedLabelIds == input.ExcludedLabelIds ||
                    (this.ExcludedLabelIds != null &&
                    this.ExcludedLabelIds.SequenceEqual(input.ExcludedLabelIds))
                ) && 
                (
                    this.WarehouseId == input.WarehouseId ||
                    (this.WarehouseId != null &&
                    this.WarehouseId.Equals(input.WarehouseId))
                ) && 
                (
                    this.ShipDate == input.ShipDate ||
                    (this.ShipDate != null &&
                    this.ShipDate.Equals(input.ShipDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CarrierId != null)
                    hashCode = hashCode * 59 + this.CarrierId.GetHashCode();
                if (this.ExcludedLabelIds != null)
                    hashCode = hashCode * 59 + this.ExcludedLabelIds.GetHashCode();
                if (this.WarehouseId != null)
                    hashCode = hashCode * 59 + this.WarehouseId.GetHashCode();
                if (this.ShipDate != null)
                    hashCode = hashCode * 59 + this.ShipDate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

/* 
 * ShipEngine
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ShipEngine.ApiClient.Client.SwaggerDateConverter;

namespace ShipEngine.ApiClient.Model
{
    /// <summary>
    /// AmazonAccountInformationRequest
    /// </summary>
    [DataContract]
    public partial class AmazonAccountInformationRequest :  IEquatable<AmazonAccountInformationRequest>, IValidatableObject
    {
        /// <summary>
        /// Defines ProductIdentifier
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ProductIdentifierEnum
        {
            
            /// <summary>
            /// Enum Sku for value: sku
            /// </summary>
            [EnumMember(Value = "sku")]
            Sku = 1,
            
            /// <summary>
            /// Enum Asin for value: asin
            /// </summary>
            [EnumMember(Value = "asin")]
            Asin = 2
        }

        /// <summary>
        /// Gets or Sets ProductIdentifier
        /// </summary>
        [DataMember(Name="product_identifier", EmitDefaultValue=false)]
        public ProductIdentifierEnum? ProductIdentifier { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AmazonAccountInformationRequest" /> class.
        /// </summary>
        /// <param name="storeName">storeName.</param>
        /// <param name="merchantSellerId">merchantSellerId.</param>
        /// <param name="productIdentifier">productIdentifier.</param>
        /// <param name="mwsAuthToken">mwsAuthToken.</param>
        public AmazonAccountInformationRequest(string storeName = default(string), string merchantSellerId = default(string), ProductIdentifierEnum? productIdentifier = default(ProductIdentifierEnum?), string mwsAuthToken = default(string))
        {
            this.StoreName = storeName;
            this.MerchantSellerId = merchantSellerId;
            this.ProductIdentifier = productIdentifier;
            this.MwsAuthToken = mwsAuthToken;
        }
        
        /// <summary>
        /// Gets or Sets StoreName
        /// </summary>
        [DataMember(Name="store_name", EmitDefaultValue=false)]
        public string StoreName { get; set; }

        /// <summary>
        /// Gets or Sets MerchantSellerId
        /// </summary>
        [DataMember(Name="merchant_seller_id", EmitDefaultValue=false)]
        public string MerchantSellerId { get; set; }


        /// <summary>
        /// Gets or Sets MwsAuthToken
        /// </summary>
        [DataMember(Name="mws_auth_token", EmitDefaultValue=false)]
        public string MwsAuthToken { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AmazonAccountInformationRequest {\n");
            sb.Append("  StoreName: ").Append(StoreName).Append("\n");
            sb.Append("  MerchantSellerId: ").Append(MerchantSellerId).Append("\n");
            sb.Append("  ProductIdentifier: ").Append(ProductIdentifier).Append("\n");
            sb.Append("  MwsAuthToken: ").Append(MwsAuthToken).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AmazonAccountInformationRequest);
        }

        /// <summary>
        /// Returns true if AmazonAccountInformationRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of AmazonAccountInformationRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AmazonAccountInformationRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.StoreName == input.StoreName ||
                    (this.StoreName != null &&
                    this.StoreName.Equals(input.StoreName))
                ) && 
                (
                    this.MerchantSellerId == input.MerchantSellerId ||
                    (this.MerchantSellerId != null &&
                    this.MerchantSellerId.Equals(input.MerchantSellerId))
                ) && 
                (
                    this.ProductIdentifier == input.ProductIdentifier ||
                    (this.ProductIdentifier != null &&
                    this.ProductIdentifier.Equals(input.ProductIdentifier))
                ) && 
                (
                    this.MwsAuthToken == input.MwsAuthToken ||
                    (this.MwsAuthToken != null &&
                    this.MwsAuthToken.Equals(input.MwsAuthToken))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.StoreName != null)
                    hashCode = hashCode * 59 + this.StoreName.GetHashCode();
                if (this.MerchantSellerId != null)
                    hashCode = hashCode * 59 + this.MerchantSellerId.GetHashCode();
                if (this.ProductIdentifier != null)
                    hashCode = hashCode * 59 + this.ProductIdentifier.GetHashCode();
                if (this.MwsAuthToken != null)
                    hashCode = hashCode * 59 + this.MwsAuthToken.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

/* 
 * ShipEngine
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ShipEngine.ApiClient.Client.SwaggerDateConverter;

namespace ShipEngine.ApiClient.Model
{
    /// <summary>
    /// ChannelAdvisorAccountInformationRequest
    /// </summary>
    [DataContract]
    public partial class ChannelAdvisorAccountInformationRequest :  IEquatable<ChannelAdvisorAccountInformationRequest>, IValidatableObject
    {
        /// <summary>
        /// Defines ProductIdentifier
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ProductIdentifierEnum
        {
            
            /// <summary>
            /// Enum ClientOrderNumber for value: clientOrderNumber
            /// </summary>
            [EnumMember(Value = "clientOrderNumber")]
            ClientOrderNumber = 1,
            
            /// <summary>
            /// Enum ChannelAdvisorOrderNumber for value: channelAdvisorOrderNumber
            /// </summary>
            [EnumMember(Value = "channelAdvisorOrderNumber")]
            ChannelAdvisorOrderNumber = 2
        }

        /// <summary>
        /// Gets or Sets ProductIdentifier
        /// </summary>
        [DataMember(Name="product_identifier", EmitDefaultValue=false)]
        public ProductIdentifierEnum? ProductIdentifier { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ChannelAdvisorAccountInformationRequest" /> class.
        /// </summary>
        /// <param name="storeName">storeName.</param>
        /// <param name="profileId">profileId.</param>
        /// <param name="productIdentifier">productIdentifier.</param>
        public ChannelAdvisorAccountInformationRequest(string storeName = default(string), int? profileId = default(int?), ProductIdentifierEnum? productIdentifier = default(ProductIdentifierEnum?))
        {
            this.StoreName = storeName;
            this.ProfileId = profileId;
            this.ProductIdentifier = productIdentifier;
        }
        
        /// <summary>
        /// Gets or Sets StoreName
        /// </summary>
        [DataMember(Name="store_name", EmitDefaultValue=false)]
        public string StoreName { get; set; }

        /// <summary>
        /// Gets or Sets ProfileId
        /// </summary>
        [DataMember(Name="profile_id", EmitDefaultValue=false)]
        public int? ProfileId { get; set; }


        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ChannelAdvisorAccountInformationRequest {\n");
            sb.Append("  StoreName: ").Append(StoreName).Append("\n");
            sb.Append("  ProfileId: ").Append(ProfileId).Append("\n");
            sb.Append("  ProductIdentifier: ").Append(ProductIdentifier).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ChannelAdvisorAccountInformationRequest);
        }

        /// <summary>
        /// Returns true if ChannelAdvisorAccountInformationRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of ChannelAdvisorAccountInformationRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ChannelAdvisorAccountInformationRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.StoreName == input.StoreName ||
                    (this.StoreName != null &&
                    this.StoreName.Equals(input.StoreName))
                ) && 
                (
                    this.ProfileId == input.ProfileId ||
                    (this.ProfileId != null &&
                    this.ProfileId.Equals(input.ProfileId))
                ) && 
                (
                    this.ProductIdentifier == input.ProductIdentifier ||
                    (this.ProductIdentifier != null &&
                    this.ProductIdentifier.Equals(input.ProductIdentifier))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.StoreName != null)
                    hashCode = hashCode * 59 + this.StoreName.GetHashCode();
                if (this.ProfileId != null)
                    hashCode = hashCode * 59 + this.ProfileId.GetHashCode();
                if (this.ProductIdentifier != null)
                    hashCode = hashCode * 59 + this.ProductIdentifier.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

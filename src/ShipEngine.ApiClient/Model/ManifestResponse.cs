/* 
 * ShipEngine
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ShipEngine.ApiClient.Client.SwaggerDateConverter;

namespace ShipEngine.ApiClient.Model
{
    /// <summary>
    /// ManifestResponse
    /// </summary>
    [DataContract]
    public partial class ManifestResponse :  IEquatable<ManifestResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ManifestResponse" /> class.
        /// </summary>
        /// <param name="manifestId">manifestId.</param>
        /// <param name="formId">formId.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="shipDate">shipDate.</param>
        /// <param name="shipments">shipments.</param>
        /// <param name="warehouseId">warehouseId.</param>
        /// <param name="submissionId">submissionId.</param>
        /// <param name="carrierId">carrierId.</param>
        /// <param name="manifestDownload">manifestDownload.</param>
        public ManifestResponse(string manifestId = default(string), string formId = default(string), DateTime? createdAt = default(DateTime?), DateTime? shipDate = default(DateTime?), int? shipments = default(int?), string warehouseId = default(string), string submissionId = default(string), string carrierId = default(string), LinkDTO manifestDownload = default(LinkDTO))
        {
            this.ManifestId = manifestId;
            this.FormId = formId;
            this.CreatedAt = createdAt;
            this.ShipDate = shipDate;
            this.Shipments = shipments;
            this.WarehouseId = warehouseId;
            this.SubmissionId = submissionId;
            this.CarrierId = carrierId;
            this.ManifestDownload = manifestDownload;
        }
        
        /// <summary>
        /// Gets or Sets ManifestId
        /// </summary>
        [DataMember(Name="manifest_id", EmitDefaultValue=false)]
        public string ManifestId { get; set; }

        /// <summary>
        /// Gets or Sets FormId
        /// </summary>
        [DataMember(Name="form_id", EmitDefaultValue=false)]
        public string FormId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name="created_at", EmitDefaultValue=false)]
        public DateTime? CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets ShipDate
        /// </summary>
        [DataMember(Name="ship_date", EmitDefaultValue=false)]
        public DateTime? ShipDate { get; set; }

        /// <summary>
        /// Gets or Sets Shipments
        /// </summary>
        [DataMember(Name="shipments", EmitDefaultValue=false)]
        public int? Shipments { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseId
        /// </summary>
        [DataMember(Name="warehouse_id", EmitDefaultValue=false)]
        public string WarehouseId { get; set; }

        /// <summary>
        /// Gets or Sets SubmissionId
        /// </summary>
        [DataMember(Name="submission_id", EmitDefaultValue=false)]
        public string SubmissionId { get; set; }

        /// <summary>
        /// Gets or Sets CarrierId
        /// </summary>
        [DataMember(Name="carrier_id", EmitDefaultValue=false)]
        public string CarrierId { get; set; }

        /// <summary>
        /// Gets or Sets ManifestDownload
        /// </summary>
        [DataMember(Name="manifest_download", EmitDefaultValue=false)]
        public LinkDTO ManifestDownload { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ManifestResponse {\n");
            sb.Append("  ManifestId: ").Append(ManifestId).Append("\n");
            sb.Append("  FormId: ").Append(FormId).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  ShipDate: ").Append(ShipDate).Append("\n");
            sb.Append("  Shipments: ").Append(Shipments).Append("\n");
            sb.Append("  WarehouseId: ").Append(WarehouseId).Append("\n");
            sb.Append("  SubmissionId: ").Append(SubmissionId).Append("\n");
            sb.Append("  CarrierId: ").Append(CarrierId).Append("\n");
            sb.Append("  ManifestDownload: ").Append(ManifestDownload).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ManifestResponse);
        }

        /// <summary>
        /// Returns true if ManifestResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of ManifestResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ManifestResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ManifestId == input.ManifestId ||
                    (this.ManifestId != null &&
                    this.ManifestId.Equals(input.ManifestId))
                ) && 
                (
                    this.FormId == input.FormId ||
                    (this.FormId != null &&
                    this.FormId.Equals(input.FormId))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.ShipDate == input.ShipDate ||
                    (this.ShipDate != null &&
                    this.ShipDate.Equals(input.ShipDate))
                ) && 
                (
                    this.Shipments == input.Shipments ||
                    (this.Shipments != null &&
                    this.Shipments.Equals(input.Shipments))
                ) && 
                (
                    this.WarehouseId == input.WarehouseId ||
                    (this.WarehouseId != null &&
                    this.WarehouseId.Equals(input.WarehouseId))
                ) && 
                (
                    this.SubmissionId == input.SubmissionId ||
                    (this.SubmissionId != null &&
                    this.SubmissionId.Equals(input.SubmissionId))
                ) && 
                (
                    this.CarrierId == input.CarrierId ||
                    (this.CarrierId != null &&
                    this.CarrierId.Equals(input.CarrierId))
                ) && 
                (
                    this.ManifestDownload == input.ManifestDownload ||
                    (this.ManifestDownload != null &&
                    this.ManifestDownload.Equals(input.ManifestDownload))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ManifestId != null)
                    hashCode = hashCode * 59 + this.ManifestId.GetHashCode();
                if (this.FormId != null)
                    hashCode = hashCode * 59 + this.FormId.GetHashCode();
                if (this.CreatedAt != null)
                    hashCode = hashCode * 59 + this.CreatedAt.GetHashCode();
                if (this.ShipDate != null)
                    hashCode = hashCode * 59 + this.ShipDate.GetHashCode();
                if (this.Shipments != null)
                    hashCode = hashCode * 59 + this.Shipments.GetHashCode();
                if (this.WarehouseId != null)
                    hashCode = hashCode * 59 + this.WarehouseId.GetHashCode();
                if (this.SubmissionId != null)
                    hashCode = hashCode * 59 + this.SubmissionId.GetHashCode();
                if (this.CarrierId != null)
                    hashCode = hashCode * 59 + this.CarrierId.GetHashCode();
                if (this.ManifestDownload != null)
                    hashCode = hashCode * 59 + this.ManifestDownload.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

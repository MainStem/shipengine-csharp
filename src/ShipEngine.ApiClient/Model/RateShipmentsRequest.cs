/* 
 * ShipEngine
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ShipEngine.ApiClient.Client.SwaggerDateConverter;

namespace ShipEngine.ApiClient.Model
{
    /// <summary>
    /// RateShipmentsRequest
    /// </summary>
    [DataContract]
    public partial class RateShipmentsRequest :  IEquatable<RateShipmentsRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RateShipmentsRequest" /> class.
        /// </summary>
        /// <param name="ShipmentIds">ShipmentIds.</param>
        /// <param name="RateOptions">RateOptions.</param>
        /// <param name="Shipments">Shipments.</param>
        public RateShipmentsRequest(List<string> ShipmentIds = default(List<string>), RateRequest RateOptions = default(RateRequest), List<AddressValidatingShipment> Shipments = default(List<AddressValidatingShipment>))
        {
            this.ShipmentIds = ShipmentIds;
            this.RateOptions = RateOptions;
            this.Shipments = Shipments;
        }
        
        /// <summary>
        /// Gets or Sets ShipmentIds
        /// </summary>
        [DataMember(Name="shipment_ids", EmitDefaultValue=false)]
        public List<string> ShipmentIds { get; set; }

        /// <summary>
        /// Gets or Sets RateOptions
        /// </summary>
        [DataMember(Name="rate_options", EmitDefaultValue=false)]
        public RateRequest RateOptions { get; set; }

        /// <summary>
        /// Gets or Sets Shipments
        /// </summary>
        [DataMember(Name="shipments", EmitDefaultValue=false)]
        public List<AddressValidatingShipment> Shipments { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class RateShipmentsRequest {\n");
            sb.Append("  ShipmentIds: ").Append(ShipmentIds).Append("\n");
            sb.Append("  RateOptions: ").Append(RateOptions).Append("\n");
            sb.Append("  Shipments: ").Append(Shipments).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as RateShipmentsRequest);
        }

        /// <summary>
        /// Returns true if RateShipmentsRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of RateShipmentsRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RateShipmentsRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ShipmentIds == input.ShipmentIds ||
                    (this.ShipmentIds != null &&
                    this.ShipmentIds.SequenceEqual(input.ShipmentIds))
                ) && 
                (
                    this.RateOptions == input.RateOptions ||
                    (this.RateOptions != null &&
                    this.RateOptions.Equals(input.RateOptions))
                ) && 
                (
                    this.Shipments == input.Shipments ||
                    (this.Shipments != null &&
                    this.Shipments.SequenceEqual(input.Shipments))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ShipmentIds != null)
                    hashCode = hashCode * 59 + this.ShipmentIds.GetHashCode();
                if (this.RateOptions != null)
                    hashCode = hashCode * 59 + this.RateOptions.GetHashCode();
                if (this.Shipments != null)
                    hashCode = hashCode * 59 + this.Shipments.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

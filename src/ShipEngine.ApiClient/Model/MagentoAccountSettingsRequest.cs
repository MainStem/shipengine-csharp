/* 
 * ShipEngine
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ShipEngine.ApiClient.Client.SwaggerDateConverter;

namespace ShipEngine.ApiClient.Model
{
    /// <summary>
    /// MagentoAccountSettingsRequest
    /// </summary>
    [DataContract]
    public partial class MagentoAccountSettingsRequest :  IEquatable<MagentoAccountSettingsRequest>, IValidatableObject
    {
        /// <summary>
        /// Defines CapturePayment
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CapturePaymentEnum
        {
            
            /// <summary>
            /// Enum Shipped for value: when_order_is_shipped
            /// </summary>
            [EnumMember(Value = "when_order_is_shipped")]
            Shipped = 1,
            
            /// <summary>
            /// Enum Placed for value: when_order_is_placed
            /// </summary>
            [EnumMember(Value = "when_order_is_placed")]
            Placed = 2
        }

        /// <summary>
        /// Gets or Sets CapturePayment
        /// </summary>
        [DataMember(Name="capture_payment", EmitDefaultValue=false)]
        public CapturePaymentEnum? CapturePayment { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="MagentoAccountSettingsRequest" /> class.
        /// </summary>
        /// <param name="unpaidStatus">unpaidStatus.</param>
        /// <param name="paidStatus">paidStatus.</param>
        /// <param name="shippedStatus">shippedStatus.</param>
        /// <param name="cancelledStatus">cancelledStatus.</param>
        /// <param name="holdStatus">holdStatus.</param>
        /// <param name="warehouseLocation">warehouseLocation.</param>
        /// <param name="capturePayment">capturePayment.</param>
        public MagentoAccountSettingsRequest(List<string> unpaidStatus = default(List<string>), List<string> paidStatus = default(List<string>), List<string> shippedStatus = default(List<string>), List<string> cancelledStatus = default(List<string>), List<string> holdStatus = default(List<string>), List<string> warehouseLocation = default(List<string>), CapturePaymentEnum? capturePayment = default(CapturePaymentEnum?))
        {
            this.UnpaidStatus = unpaidStatus;
            this.PaidStatus = paidStatus;
            this.ShippedStatus = shippedStatus;
            this.CancelledStatus = cancelledStatus;
            this.HoldStatus = holdStatus;
            this.WarehouseLocation = warehouseLocation;
            this.CapturePayment = capturePayment;
        }
        
        /// <summary>
        /// Gets or Sets UnpaidStatus
        /// </summary>
        [DataMember(Name="unpaid_status", EmitDefaultValue=false)]
        public List<string> UnpaidStatus { get; set; }

        /// <summary>
        /// Gets or Sets PaidStatus
        /// </summary>
        [DataMember(Name="paid_status", EmitDefaultValue=false)]
        public List<string> PaidStatus { get; set; }

        /// <summary>
        /// Gets or Sets ShippedStatus
        /// </summary>
        [DataMember(Name="shipped_status", EmitDefaultValue=false)]
        public List<string> ShippedStatus { get; set; }

        /// <summary>
        /// Gets or Sets CancelledStatus
        /// </summary>
        [DataMember(Name="cancelled_status", EmitDefaultValue=false)]
        public List<string> CancelledStatus { get; set; }

        /// <summary>
        /// Gets or Sets HoldStatus
        /// </summary>
        [DataMember(Name="hold_status", EmitDefaultValue=false)]
        public List<string> HoldStatus { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocation
        /// </summary>
        [DataMember(Name="warehouse_location", EmitDefaultValue=false)]
        public List<string> WarehouseLocation { get; set; }


        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MagentoAccountSettingsRequest {\n");
            sb.Append("  UnpaidStatus: ").Append(UnpaidStatus).Append("\n");
            sb.Append("  PaidStatus: ").Append(PaidStatus).Append("\n");
            sb.Append("  ShippedStatus: ").Append(ShippedStatus).Append("\n");
            sb.Append("  CancelledStatus: ").Append(CancelledStatus).Append("\n");
            sb.Append("  HoldStatus: ").Append(HoldStatus).Append("\n");
            sb.Append("  WarehouseLocation: ").Append(WarehouseLocation).Append("\n");
            sb.Append("  CapturePayment: ").Append(CapturePayment).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MagentoAccountSettingsRequest);
        }

        /// <summary>
        /// Returns true if MagentoAccountSettingsRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of MagentoAccountSettingsRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MagentoAccountSettingsRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.UnpaidStatus == input.UnpaidStatus ||
                    this.UnpaidStatus != null &&
                    this.UnpaidStatus.SequenceEqual(input.UnpaidStatus)
                ) && 
                (
                    this.PaidStatus == input.PaidStatus ||
                    this.PaidStatus != null &&
                    this.PaidStatus.SequenceEqual(input.PaidStatus)
                ) && 
                (
                    this.ShippedStatus == input.ShippedStatus ||
                    this.ShippedStatus != null &&
                    this.ShippedStatus.SequenceEqual(input.ShippedStatus)
                ) && 
                (
                    this.CancelledStatus == input.CancelledStatus ||
                    this.CancelledStatus != null &&
                    this.CancelledStatus.SequenceEqual(input.CancelledStatus)
                ) && 
                (
                    this.HoldStatus == input.HoldStatus ||
                    this.HoldStatus != null &&
                    this.HoldStatus.SequenceEqual(input.HoldStatus)
                ) && 
                (
                    this.WarehouseLocation == input.WarehouseLocation ||
                    this.WarehouseLocation != null &&
                    this.WarehouseLocation.SequenceEqual(input.WarehouseLocation)
                ) && 
                (
                    this.CapturePayment == input.CapturePayment ||
                    (this.CapturePayment != null &&
                    this.CapturePayment.Equals(input.CapturePayment))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.UnpaidStatus != null)
                    hashCode = hashCode * 59 + this.UnpaidStatus.GetHashCode();
                if (this.PaidStatus != null)
                    hashCode = hashCode * 59 + this.PaidStatus.GetHashCode();
                if (this.ShippedStatus != null)
                    hashCode = hashCode * 59 + this.ShippedStatus.GetHashCode();
                if (this.CancelledStatus != null)
                    hashCode = hashCode * 59 + this.CancelledStatus.GetHashCode();
                if (this.HoldStatus != null)
                    hashCode = hashCode * 59 + this.HoldStatus.GetHashCode();
                if (this.WarehouseLocation != null)
                    hashCode = hashCode * 59 + this.WarehouseLocation.GetHashCode();
                if (this.CapturePayment != null)
                    hashCode = hashCode * 59 + this.CapturePayment.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

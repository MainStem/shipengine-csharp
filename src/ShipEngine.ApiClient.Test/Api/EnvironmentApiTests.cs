/* 
 * ShipEngine
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ShipEngine.ApiClient.Client;
using ShipEngine.ApiClient.Api;
using ShipEngine.ApiClient.Model;

namespace ShipEngine.ApiClient.Test
{
    /// <summary>
    ///  Class for testing EnvironmentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class EnvironmentApiTests
    {
        private EnvironmentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new EnvironmentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EnvironmentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' EnvironmentApi
            //Assert.IsInstanceOfType(typeof(EnvironmentApi), instance, "instance is a EnvironmentApi");
        }

        
        /// <summary>
        /// Test EnvironmentCreateWebhook
        /// </summary>
        [Test]
        public void EnvironmentCreateWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateWebhookDTO createWebhookDto = null;
            //string apiKey = null;
            //var response = instance.EnvironmentCreateWebhook(createWebhookDto, apiKey);
            //Assert.IsInstanceOf<WebhookDTO> (response, "response is WebhookDTO");
        }
        
        /// <summary>
        /// Test EnvironmentDeleteWebhook
        /// </summary>
        [Test]
        public void EnvironmentDeleteWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string webhookId = null;
            //string apiKey = null;
            //instance.EnvironmentDeleteWebhook(webhookId, apiKey);
            
        }
        
        /// <summary>
        /// Test EnvironmentGetWebhookById
        /// </summary>
        [Test]
        public void EnvironmentGetWebhookByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string webhookId = null;
            //string apiKey = null;
            //var response = instance.EnvironmentGetWebhookById(webhookId, apiKey);
            //Assert.IsInstanceOf<WebhookDTO> (response, "response is WebhookDTO");
        }
        
        /// <summary>
        /// Test EnvironmentUpdateWebhook
        /// </summary>
        [Test]
        public void EnvironmentUpdateWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string webhookId = null;
            //UpdateWebhookDTO updateWebhookDto = null;
            //string apiKey = null;
            //instance.EnvironmentUpdateWebhook(webhookId, updateWebhookDto, apiKey);
            
        }
        
        /// <summary>
        /// Test EnvironmentWebhooks
        /// </summary>
        [Test]
        public void EnvironmentWebhooksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //var response = instance.EnvironmentWebhooks(apiKey);
            //Assert.IsInstanceOf<List<WebhookDTO>> (response, "response is List<WebhookDTO>");
        }
        
        /// <summary>
        /// Test EnvironmentWhoami
        /// </summary>
        [Test]
        public void EnvironmentWhoamiTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //var response = instance.EnvironmentWhoami(apiKey);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
    }

}

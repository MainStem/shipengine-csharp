/* 
 * ShipEngine
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ShipEngine.ApiClient.Client;
using ShipEngine.ApiClient.Api;
using ShipEngine.ApiClient.Model;

namespace ShipEngine.ApiClient.Test
{
    /// <summary>
    ///  Class for testing MarketplaceAccountsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MarketplaceAccountsApiTests
    {
        private MarketplaceAccountsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MarketplaceAccountsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MarketplaceAccountsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MarketplaceAccountsApi
            //Assert.IsInstanceOfType(typeof(MarketplaceAccountsApi), instance, "instance is a MarketplaceAccountsApi");
        }

        
        /// <summary>
        /// Test AmazonAccountConnect
        /// </summary>
        [Test]
        public void AmazonAccountConnectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AmazonAccountInformationRequest accountInfo = null;
            //string apiKey = null;
            //var response = instance.AmazonAccountConnect(accountInfo, apiKey);
            //Assert.IsInstanceOf<ConnectMarketplaceResponseDTO> (response, "response is ConnectMarketplaceResponseDTO");
        }
        
        /// <summary>
        /// Test AmazonAccountDeactivate
        /// </summary>
        [Test]
        public void AmazonAccountDeactivateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.AmazonAccountDeactivate(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test AmazonAccountReactivate
        /// </summary>
        [Test]
        public void AmazonAccountReactivateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.AmazonAccountReactivate(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test AmazonAccountTest
        /// </summary>
        [Test]
        public void AmazonAccountTestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.AmazonAccountTest(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test ChannelAdvisorAccountConnect
        /// </summary>
        [Test]
        public void ChannelAdvisorAccountConnectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChannelAdvisorAccountInformationRequest accountInfo = null;
            //string apiKey = null;
            //var response = instance.ChannelAdvisorAccountConnect(accountInfo, apiKey);
            //Assert.IsInstanceOf<ConnectMarketplaceResponseDTO> (response, "response is ConnectMarketplaceResponseDTO");
        }
        
        /// <summary>
        /// Test ChannelAdvisorAccountDeactivate
        /// </summary>
        [Test]
        public void ChannelAdvisorAccountDeactivateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.ChannelAdvisorAccountDeactivate(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test ChannelAdvisorAccountReactivate
        /// </summary>
        [Test]
        public void ChannelAdvisorAccountReactivateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.ChannelAdvisorAccountReactivate(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test ChannelAdvisorAccountTest
        /// </summary>
        [Test]
        public void ChannelAdvisorAccountTestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.ChannelAdvisorAccountTest(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test EbayAccountConnectAccessToken
        /// </summary>
        [Test]
        public void EbayAccountConnectAccessTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EbayAccessTokenRequest accessTokenInfo = null;
            //string apiKey = null;
            //var response = instance.EbayAccountConnectAccessToken(accessTokenInfo, apiKey);
            //Assert.IsInstanceOf<ConnectMarketplaceResponseDTO> (response, "response is ConnectMarketplaceResponseDTO");
        }
        
        /// <summary>
        /// Test EbayAccountDeactivate
        /// </summary>
        [Test]
        public void EbayAccountDeactivateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.EbayAccountDeactivate(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test EbayAccountReactivate
        /// </summary>
        [Test]
        public void EbayAccountReactivateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.EbayAccountReactivate(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test EbayAccountTest
        /// </summary>
        [Test]
        public void EbayAccountTestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.EbayAccountTest(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test EtsyAccountConnect
        /// </summary>
        [Test]
        public void EtsyAccountConnectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EtsyAccessTokenRequest accessTokenInfo = null;
            //string apiKey = null;
            //var response = instance.EtsyAccountConnect(accessTokenInfo, apiKey);
            //Assert.IsInstanceOf<ConnectMarketplaceResponseDTO> (response, "response is ConnectMarketplaceResponseDTO");
        }
        
        /// <summary>
        /// Test EtsyAccountDeactivate
        /// </summary>
        [Test]
        public void EtsyAccountDeactivateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.EtsyAccountDeactivate(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test EtsyAccountReactivate
        /// </summary>
        [Test]
        public void EtsyAccountReactivateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.EtsyAccountReactivate(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test EtsyAccountTest
        /// </summary>
        [Test]
        public void EtsyAccountTestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.EtsyAccountTest(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test MagentoAccountConnect
        /// </summary>
        [Test]
        public void MagentoAccountConnectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MagentoAccountInformationRequest accountInfo = null;
            //string apiKey = null;
            //var response = instance.MagentoAccountConnect(accountInfo, apiKey);
            //Assert.IsInstanceOf<ConnectMarketplaceResponseDTO> (response, "response is ConnectMarketplaceResponseDTO");
        }
        
        /// <summary>
        /// Test MagentoAccountDeactivate
        /// </summary>
        [Test]
        public void MagentoAccountDeactivateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.MagentoAccountDeactivate(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test MagentoAccountReactivate
        /// </summary>
        [Test]
        public void MagentoAccountReactivateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.MagentoAccountReactivate(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test MagentoAccountTest
        /// </summary>
        [Test]
        public void MagentoAccountTestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.MagentoAccountTest(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test ShopifyAccountConnectAccessToken
        /// </summary>
        [Test]
        public void ShopifyAccountConnectAccessTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ShopifyAccessTokenRequest accessTokenInfo = null;
            //string apiKey = null;
            //var response = instance.ShopifyAccountConnectAccessToken(accessTokenInfo, apiKey);
            //Assert.IsInstanceOf<ConnectMarketplaceResponseDTO> (response, "response is ConnectMarketplaceResponseDTO");
        }
        
        /// <summary>
        /// Test ShopifyAccountDeactivate
        /// </summary>
        [Test]
        public void ShopifyAccountDeactivateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.ShopifyAccountDeactivate(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test ShopifyAccountReactivate
        /// </summary>
        [Test]
        public void ShopifyAccountReactivateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.ShopifyAccountReactivate(storeId, apiKey);
            
        }
        
        /// <summary>
        /// Test ShopifyAccountTest
        /// </summary>
        [Test]
        public void ShopifyAccountTestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? storeId = null;
            //string apiKey = null;
            //instance.ShopifyAccountTest(storeId, apiKey);
            
        }
        
    }

}

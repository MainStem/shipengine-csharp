/* 
 * ShipEngine
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ShipEngine.ApiClient.Client;
using ShipEngine.ApiClient.Api;
using ShipEngine.ApiClient.Model;

namespace ShipEngine.ApiClient.Test
{
    /// <summary>
    ///  Class for testing ShipmentsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ShipmentsApiTests
    {
        private ShipmentsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ShipmentsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ShipmentsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ShipmentsApi
            //Assert.IsInstanceOfType(typeof(ShipmentsApi), instance, "instance is a ShipmentsApi");
        }

        
        /// <summary>
        /// Test ShipmentsAddTag
        /// </summary>
        [Test]
        public void ShipmentsAddTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //string tag = null;
            //string apiKey = null;
            //var response = instance.ShipmentsAddTag(shipmentId, tag, apiKey);
            //Assert.IsInstanceOf<ShipmentAddTagResponse> (response, "response is ShipmentAddTagResponse");
        }
        
        /// <summary>
        /// Test ShipmentsCancel
        /// </summary>
        [Test]
        public void ShipmentsCancelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //string apiKey = null;
            //instance.ShipmentsCancel(shipmentId, apiKey);
            
        }
        
        /// <summary>
        /// Test ShipmentsCreateShipments
        /// </summary>
        [Test]
        public void ShipmentsCreateShipmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateShipmentsRequest shipmentsRequest = null;
            //string apiKey = null;
            //var response = instance.ShipmentsCreateShipments(shipmentsRequest, apiKey);
            //Assert.IsInstanceOf<CreateShipmentsResponse> (response, "response is CreateShipmentsResponse");
        }
        
        /// <summary>
        /// Test ShipmentsGet
        /// </summary>
        [Test]
        public void ShipmentsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //string apiKey = null;
            //var response = instance.ShipmentsGet(shipmentId, apiKey);
            //Assert.IsInstanceOf<Shipment> (response, "response is Shipment");
        }
        
        /// <summary>
        /// Test ShipmentsGetByExternalId
        /// </summary>
        [Test]
        public void ShipmentsGetByExternalIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string externalShipmentId = null;
            //string apiKey = null;
            //var response = instance.ShipmentsGetByExternalId(externalShipmentId, apiKey);
            //Assert.IsInstanceOf<Shipment> (response, "response is Shipment");
        }
        
        /// <summary>
        /// Test ShipmentsGetRatesForShipment
        /// </summary>
        [Test]
        public void ShipmentsGetRatesForShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //string apiKey = null;
            //DateTime? createdAtStart = null;
            //var response = instance.ShipmentsGetRatesForShipment(shipmentId, apiKey, createdAtStart);
            //Assert.IsInstanceOf<RateResponse> (response, "response is RateResponse");
        }
        
        /// <summary>
        /// Test ShipmentsList
        /// </summary>
        [Test]
        public void ShipmentsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string batchId = null;
            //string tag = null;
            //string shipmentStatus = null;
            //DateTime? modifiedAtStart = null;
            //DateTime? modifiedAtEnd = null;
            //DateTime? createdAtStart = null;
            //DateTime? createdAtEnd = null;
            //int? page = null;
            //int? pageSize = null;
            //string sortDir = null;
            //string sortBy = null;
            //var response = instance.ShipmentsList(apiKey, batchId, tag, shipmentStatus, modifiedAtStart, modifiedAtEnd, createdAtStart, createdAtEnd, page, pageSize, sortDir, sortBy);
            //Assert.IsInstanceOf<ListShipmentResponse> (response, "response is ListShipmentResponse");
        }
        
        /// <summary>
        /// Test ShipmentsListErrors
        /// </summary>
        [Test]
        public void ShipmentsListErrorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //string apiKey = null;
            //int? page = null;
            //int? pagesize = null;
            //var response = instance.ShipmentsListErrors(shipmentId, apiKey, page, pagesize);
            //Assert.IsInstanceOf<ShipmentResponseErrors> (response, "response is ShipmentResponseErrors");
        }
        
        /// <summary>
        /// Test ShipmentsRemoveTag
        /// </summary>
        [Test]
        public void ShipmentsRemoveTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //string tag = null;
            //string apiKey = null;
            //instance.ShipmentsRemoveTag(shipmentId, tag, apiKey);
            
        }
        
        /// <summary>
        /// Test ShipmentsUpdateShipment
        /// </summary>
        [Test]
        public void ShipmentsUpdateShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipmentId = null;
            //AddressValidatingShipment shipment = null;
            //string apiKey = null;
            //instance.ShipmentsUpdateShipment(shipmentId, shipment, apiKey);
            
        }
        
    }

}
